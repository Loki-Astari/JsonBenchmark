name:       Build
run-name:   ${{ github.actor }} Building
on:
    push:
        branches:
            - master
jobs:
        #  windows-latest
        #  windows-2022
        #  windows-2019
        #  ubuntu-latest
        #  ubuntu-22.04
        #  ubuntu-20.04
        #  ubuntu-18.04
        #  macos-latest
        #  macos-13
        #  macos-12
        #  macos-11
    Build_on_Mac:
        runs-on:    macos-latest
        steps:
            - name: Checkout Project
              uses: actions/checkout@master
              with:
                submodules: recursive
                token: ${{ secrets.GITHUB_TOKEN }}
            - name: Install Dependencies
              run: |
                env HOMEBREW_NO_AUTO_UPDATE=1 brew install boost
                env HOMEBREW_NO_AUTO_UPDATE=1 brew install php
            - name: Run Configure
              run: |
                ./configure --disable-vera
                ./init3rdParty
            - name: Make
              run: make
            - run: ./runTests
            - name: Archive code coverage results
              uses: actions/upload-artifact@v4
              with:
                name: DataOSX
                path: |
                  Stats.html
                  Conformance.Darwin.html
                  Performance.Darwin.html
    Build_on_Linux:
        runs-on:    ubuntu-latest
        steps:
            - name: Checkout Project
              uses: actions/checkout@master
              with:
                submodules: recursive
                token: ${{ secrets.GITHUB_TOKEN }}
            - name: Install Dependencies
              run: |
                sudo apt-get install libboost-all-dev
                sudo apt-get install php
                git clone https://github.com/Neargye/magic_enum.git /tmp/magic_enum
            - name: Run Configure
              run: |
                ./configure --disable-vera
                ./init3rdParty
            - name: Make
              env:
                ThorsSerializerTest_CXXFLAGS: "-I /tmp/magic_enum/include/magic_enum"
              run: |
                make
            - run: ./runTests
            - name: Archive code coverage results
              uses: actions/upload-artifact@v4
              with:
                name: DataLinux
                path: |
                  Conformance.linux.html
                  Performance.linux.html
    Generate_Blog:
#        needs:      [Build_on_Mac, Build_on_Linux, Build_on_Windows]
        needs:      [Build_on_Mac, Build_on_Linux]
        runs-on:    ubuntu-latest
        steps:
            - name: GetBlog
              uses: actions/checkout@v3
              with:
                repository: git@github.com:Loki-Astari/geeky-nextjs.git
                ref: 'master'
                token:  ${{ secrets.JSONBENCHMARKKEY }}
            - name: setup git config
              run: |
                git config user.name "GitHub Actions Bot"
                git config user.email "<>"
            - name: Download a single artifact
              uses: actions/download-artifact@v4
            - run: |
                ls
                mv Conformance.linux.html   geeky-nextjs/public/Json/Conformance.linux.html
                mv Performance.linux.html   geeky-nextjs/public/Json/Conformance.linus.html
                mv Conformance.Darwin.html  geeky-nextjs/public/Json/Conformance.osx.html
                mv Performance.Darwin.html  geeky-nextjs/public/Json/Conformance.osx.html
                mv Stats.html               geeky-nextjs/source/Json/Stats.html
            - run: git push origin master
#    Build_on_Windows:
#        runs-on:    windows-latest
#        steps:
#            - name: Generate a token
#              id: generate-token
#              uses: actions/create-github-app-token@v1
#              with:
#                app-id: ${{ vars.JSONBENCHMARKUPDATER }}
#                private-key: ${{ secrets.JSONBENCHMARKUPDATER_SECRET }}
#            - run:  git config --global core.autocrlf input
#            - name: Checkout Project
#              uses: actions/checkout@master
#              with:
#                submodules: recursive
#                token: ${{ secrets.GITHUB_TOKEN }}
#            - name: Install Sys-Dependencies
#              uses: msys2/setup-msys2@v2
#              with:
#                install: >-
#                    autoconf
#                    automake
#                    make
#                    git
#                    gperf
#                    coreutils
#                    vim
#                    mingw-w64-x86_64-gcc
#                    mingw-w64-x86_64-gdb
#                    mingw-w64-x86_64-libyaml
#                    mingw-w64-x86_64-dlfcn
#                    mingw-w64-x86_64-snappy
#                    mingw-w64-x86_64-boost
#                    mingw-w64-x86_64-cmake
#            - name: Install Dependencies
#              shell: msys2 {0}
#              run: |
#                git clone https://github.com/Neargye/magic_enum.git /tmp/magic_enum
#            - name: Run Configure
#              shell: msys2 {0}
#              run: |
#                ./configure --disable-vera --disable-colour --with-magicenum-header-only-root=/tmp/magic_enum/include/magic_enum
#                ./init3rdParty
#            - name: Make
#              shell: msys2 {0}
#              env:
#                ThorsSerializerTest_CXXFLAGS: "-I /tmp/magic_enum/include/magic_enum"
#              run: make
#            - run: ./runTests
#            - name: Update Results
#              shell: msys2 {0}
#              env:
#                GH_TOKEN: ${{ steps.generate-token.outputs.token }}
#              run: |
#                ./save windows
#    Combine_Results:
#        needs:      [Build_on_Mac, Build_on_Linux, Build_on_Windows]
#        needs:      [Build_on_Mac, Build_on_Linux]
#        runs-on:    macos-latest
#        steps:
#            - name: Generate a token
#              id: generate-token
#              uses: actions/create-github-app-token@v1
#              with:
#                app-id: ${{ vars.JSONBENCHMARKUPDATER }}
#                private-key: ${{ secrets.JSONBENCHMARKUPDATER_SECRET }}
#            - name: Install Dependencies
#              run: |
#                env HOMEBREW_NO_AUTO_UPDATE=1 brew install php
#            - name: Checkout Project
#              uses: actions/checkout@master
#              with:
#                token: ${{ secrets.GITHUB_TOKEN }}
#            - name: Publish Results
#              env:
#                GH_TOKEN: ${{ steps.generate-token.outputs.token }}
#              run: |
#                success
#
