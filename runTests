#!/bin/bash

export PATH="${PATH}:$(pwd)/build/bin"
export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:$(pwd)/build/lib:/usr/local/lib"
export DYLD_LIBRARY_PATH="${DYLD_LIBRARY_PATH}:$(pwd)/build/lib:/usr/local/lib"

if [[ $1 == "linux" ]]; then
    dateAt="-d @"
fi
if [[ $1 == "osx" ]]; then
    dateAt="-r "
fi


echo "Library,First Commit,Last Commit,Tested Version, Latest Version,Language Type,Stars" > Stats.csv
benchmark17 --titleOnly Conformance.csv Performance.csv
for parser in $(benchmark17 --listParser); do
    for filter in $(benchmark17 --listTests); do
        benchmark17 --append --filter=${filter} --parser=${parser} Conformance.csv Performance.csv
        if [[ $? != 0 ]]; then
            benchmark17 --append --filter=${filter} --parser=${parser} --markFailed Conformance.csv Performance.csv
            r=$?
            if [[ $r != 0 ]]; then 
                echo "Big Issue: $? ${parser} ${filter}"
                exit 1
            fi
        fi
    done
    cd thirdparty/${parser}

    gitInfo=$(git remote  get-url origin)

    first=$(git log --reverse --pretty=%ct | head -1)
    firstOrdered=$(date ${dateAt}${first} +"%c")
    firstOrderNumeric=$(date ${dateAt}${first} +"%F")

    last=$(git log --pretty=%ct | head -1)
    lastOrdered=$(date ${dateAt}${last} +"%c")
    lastOrderNumeric=$(date ${dateAt}${last} +"%F")

    typeOfLib=$(benchmark17 --parser=${parser} --parserType)

    gitInfo1=${gitInfo#https://github.com/}
    gitInfo2=${gitInfo1%.*}
    gitUser=${gitInfo2%/*}
    gitRepo=${gitInfo2#*/}
    stars=$(curl -s "https://api.github.com/repos/${gitUser}/${gitRepo}?page=$i&per_page=100" | jq '.stargazers_count // 0')

    gitLatestVersion=$(git describe --tags `git rev-list --tags --max-count=1`)
    if [[ -e tags ]]; then
        getCurrentVersion=$(cat tags)
    else
        getCurrentVersion=$(git describe --tags `git rev-parse HEAD`)
    fi

    cd ../..

    echo "${parser}, ${firstOrderNumeric}, ${lastOrderNumeric}, ${getCurrentVersion}, ${gitLatestVersion}, ${typeOfLib}, ${stars}" >> Stats.csv
done
